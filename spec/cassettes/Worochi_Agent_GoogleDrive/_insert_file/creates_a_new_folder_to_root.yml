---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/discovery/v1/apis/drive/v2/rest
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - Worochi/0.0.14 google-api-ruby-client/0.6.4 Linux/3.5.0-17-generic
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - '*/*'
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Wed, 21 Aug 2013 02:57:25 GMT
      Date:
      - Wed, 21 Aug 2013 02:52:25 GMT
      Etag:
      - '"wtgj9ZncHCe-ShJM8RewHb1DgWI/dn8pn6KVO0nlU0vOLsEfgOP2dwM"'
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Cache-Control:
      - public, max-age=300, must-revalidate, no-transform
      Age:
      - '47'
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |
        {
         "kind": "discovery#restDescription",
         "etag": "\"wtgj9ZncHCe-ShJM8RewHb1DgWI/dn8pn6KVO0nlU0vOLsEfgOP2dwM\"",
         "discoveryVersion": "v1",
         "id": "drive:v2",
         "name": "drive",
         "version": "v2",
         "revision": "20130729",
         "title": "Drive API",
         "description": "The API to interact with Drive.",
         "ownerDomain": "google.com",
         "ownerName": "Google",
         "icons": {
          "x16": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_16.png",
          "x32": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_32.png"
         },
         "documentationLink": "https://developers.google.com/drive/",
         "protocol": "rest",
         "baseUrl": "https://www.googleapis.com/drive/v2/",
         "basePath": "/drive/v2/",
         "rootUrl": "https://www.googleapis.com/",
         "servicePath": "drive/v2/",
         "batchPath": "batch",
         "parameters": {
          "alt": {
           "type": "string",
           "description": "Data format for the response.",
           "default": "json",
           "enum": [
            "json"
           ],
           "enumDescriptions": [
            "Responses with Content-Type of application/json"
           ],
           "location": "query"
          },
          "fields": {
           "type": "string",
           "description": "Selector specifying which fields to include in a partial response.",
           "location": "query"
          },
          "key": {
           "type": "string",
           "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
           "location": "query"
          },
          "oauth_token": {
           "type": "string",
           "description": "OAuth 2.0 token for the current user.",
           "location": "query"
          },
          "prettyPrint": {
           "type": "boolean",
           "description": "Returns response with indentations and line breaks.",
           "default": "true",
           "location": "query"
          },
          "quotaUser": {
           "type": "string",
           "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
           "location": "query"
          },
          "userIp": {
           "type": "string",
           "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
           "location": "query"
          }
         },
         "auth": {
          "oauth2": {
           "scopes": {
            "https://www.googleapis.com/auth/drive": {
             "description": "View and manage the files and documents in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.appdata": {
             "description": "View and manage its own configuration data in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.apps.readonly": {
             "description": "View your Google Drive apps"
            },
            "https://www.googleapis.com/auth/drive.file": {
             "description": "View and manage Google Drive files that you have opened or created with this app"
            },
            "https://www.googleapis.com/auth/drive.metadata.readonly": {
             "description": "View metadata for files and documents in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.readonly": {
             "description": "View the files and documents in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.scripts": {
             "description": "Modify your Google Apps Script scripts' behavior"
            }
           }
          }
         },
         "schemas": {
          "About": {
           "id": "About",
           "type": "object",
           "description": "An item with user information and settings.",
           "properties": {
            "additionalRoleInfo": {
             "type": "array",
             "description": "Information about supported additional roles per file type. The most specific type takes precedence.",
             "items": {
              "type": "object",
              "properties": {
               "roleSets": {
                "type": "array",
                "description": "The supported additional roles per primary role.",
                "items": {
                 "type": "object",
                 "properties": {
                  "additionalRoles": {
                   "type": "array",
                   "description": "The supported additional roles with the primary role.",
                   "items": {
                    "type": "string"
                   }
                  },
                  "primaryRole": {
                   "type": "string",
                   "description": "A primary permission role."
                  }
                 }
                }
               },
               "type": {
                "type": "string",
                "description": "The content type that this additional role info applies to."
               }
              }
             }
            },
            "domainSharingPolicy": {
             "type": "string",
             "description": "The domain sharing policy for the current user."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the item."
            },
            "exportFormats": {
             "type": "array",
             "description": "The allowable export formats.",
             "items": {
              "type": "object",
              "properties": {
               "source": {
                "type": "string",
                "description": "The content type to convert from."
               },
               "targets": {
                "type": "array",
                "description": "The possible content types to convert to.",
                "items": {
                 "type": "string"
                }
               }
              }
             }
            },
            "features": {
             "type": "array",
             "description": "List of additional features enabled on this account.",
             "items": {
              "type": "object",
              "properties": {
               "featureName": {
                "type": "string",
                "description": "The name of the feature."
               },
               "featureRate": {
                "type": "number",
                "description": "The request limit rate for this feature, in queries per second.",
                "format": "double"
               }
              }
             }
            },
            "importFormats": {
             "type": "array",
             "description": "The allowable import formats.",
             "items": {
              "type": "object",
              "properties": {
               "source": {
                "type": "string",
                "description": "The imported file's content type to convert from."
               },
               "targets": {
                "type": "array",
                "description": "The possible content types to convert to.",
                "items": {
                 "type": "string"
                }
               }
              }
             }
            },
            "isCurrentAppInstalled": {
             "type": "boolean",
             "description": "A boolean indicating whether the authenticated app is installed by the authenticated user."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#about.",
             "default": "drive#about"
            },
            "largestChangeId": {
             "type": "string",
             "description": "The largest change id.",
             "format": "int64"
            },
            "maxUploadSizes": {
             "type": "array",
             "description": "List of max upload sizes for each file type. The most specific type takes precedence.",
             "items": {
              "type": "object",
              "properties": {
               "size": {
                "type": "string",
                "description": "The max upload size for this type.",
                "format": "int64"
               },
               "type": {
                "type": "string",
                "description": "The file type."
               }
              }
             }
            },
            "name": {
             "type": "string",
             "description": "The name of the current user."
            },
            "permissionId": {
             "type": "string",
             "description": "The current user's ID as visible in the permissions collection."
            },
            "quotaBytesTotal": {
             "type": "string",
             "description": "The total number of quota bytes.",
             "format": "int64"
            },
            "quotaBytesUsed": {
             "type": "string",
             "description": "The number of quota bytes used by Google Drive.",
             "format": "int64"
            },
            "quotaBytesUsedAggregate": {
             "type": "string",
             "description": "The number of quota bytes used by all Google apps (Drive, Picasa, etc.).",
             "format": "int64"
            },
            "quotaBytesUsedInTrash": {
             "type": "string",
             "description": "The number of quota bytes used by trashed items.",
             "format": "int64"
            },
            "remainingChangeIds": {
             "type": "string",
             "description": "The number of remaining change ids.",
             "format": "int64"
            },
            "rootFolderId": {
             "type": "string",
             "description": "The id of the root folder."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this item."
            },
            "user": {
             "$ref": "User",
             "description": "The authenticated user."
            }
           }
          },
          "App": {
           "id": "App",
           "type": "object",
           "description": "The apps resource provides a list of the apps that a user has installed, with information about each app's supported MIME types, file extensions, and other details.",
           "properties": {
            "authorized": {
             "type": "boolean",
             "description": "Whether the app is authorized to access data on the user's Drive."
            },
            "icons": {
             "type": "array",
             "description": "The various icons for the app.",
             "items": {
              "type": "object",
              "properties": {
               "category": {
                "type": "string",
                "description": "Category of the icon. Allowed values are:  \n- application - icon for the application \n- document - icon for a file associated with the app \n- documentShared - icon for a shared file associated with the app"
               },
               "iconUrl": {
                "type": "string",
                "description": "URL for the icon."
               },
               "size": {
                "type": "integer",
                "description": "Size of the icon. Represented as the maximum of the width and height.",
                "format": "int32"
               }
              }
             }
            },
            "id": {
             "type": "string",
             "description": "The ID of the app."
            },
            "installed": {
             "type": "boolean",
             "description": "Whether the app is installed."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#app.",
             "default": "drive#app"
            },
            "longDescription": {
             "type": "string",
             "description": "A long description of the app."
            },
            "name": {
             "type": "string",
             "description": "The name of the app."
            },
            "objectType": {
             "type": "string",
             "description": "The type of object this app creates (e.g. Chart). If empty, the app name should be used instead."
            },
            "openUrlTemplate": {
             "type": "string",
             "description": "The template url for opening files with this app. The template will contain {ids} and/or {exportIds} to be replaced by the actual file ids."
            },
            "primaryFileExtensions": {
             "type": "array",
             "description": "The list of primary file extensions.",
             "items": {
              "type": "string"
             }
            },
            "primaryMimeTypes": {
             "type": "array",
             "description": "The list of primary mime types.",
             "items": {
              "type": "string"
             }
            },
            "productId": {
             "type": "string",
             "description": "The ID of the product listing for this app."
            },
            "productUrl": {
             "type": "string",
             "description": "A link to the product listing for this app."
            },
            "secondaryFileExtensions": {
             "type": "array",
             "description": "The list of secondary file extensions.",
             "items": {
              "type": "string"
             }
            },
            "secondaryMimeTypes": {
             "type": "array",
             "description": "The list of secondary mime types.",
             "items": {
              "type": "string"
             }
            },
            "shortDescription": {
             "type": "string",
             "description": "A short description of the app."
            },
            "supportsCreate": {
             "type": "boolean",
             "description": "Whether this app supports creating new objects."
            },
            "supportsImport": {
             "type": "boolean",
             "description": "Whether this app supports importing Google Docs."
            },
            "supportsMultiOpen": {
             "type": "boolean",
             "description": "Whether this app supports opening more than one file."
            },
            "useByDefault": {
             "type": "boolean",
             "description": "Whether the app is selected as the default handler for the types it supports."
            }
           }
          },
          "AppList": {
           "id": "AppList",
           "type": "object",
           "description": "A list of third-party applications which the user has installed or given access to Google Drive.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of apps.",
             "items": {
              "$ref": "App"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#appList.",
             "default": "drive#appList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Change": {
           "id": "Change",
           "type": "object",
           "description": "Representation of a change to a file.",
           "properties": {
            "deleted": {
             "type": "boolean",
             "description": "Whether the file has been deleted."
            },
            "file": {
             "$ref": "File",
             "description": "The updated state of the file. Present if the file has not been deleted."
            },
            "fileId": {
             "type": "string",
             "description": "The ID of the file associated with this change."
            },
            "id": {
             "type": "string",
             "description": "The ID of the change.",
             "format": "int64"
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#change.",
             "default": "drive#change"
            },
            "modificationDate": {
             "type": "string",
             "description": "The time of this modification.",
             "format": "date-time"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this change."
            }
           }
          },
          "ChangeList": {
           "id": "ChangeList",
           "type": "object",
           "description": "A list of changes for a user.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of changes.",
             "items": {
              "$ref": "Change"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#changeList.",
             "default": "drive#changeList"
            },
            "largestChangeId": {
             "type": "string",
             "description": "The current largest change ID.",
             "format": "int64"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of changes."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of changes."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Channel": {
           "id": "Channel",
           "type": "object",
           "properties": {
            "address": {
             "type": "string",
             "description": "The address where notifications are delivered for this channel."
            },
            "expiration": {
             "type": "string",
             "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
             "type": "string",
             "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
             "default": "api#channel"
            },
            "params": {
             "type": "object",
             "description": "Additional parameters controlling delivery channel behavior. Optional.",
             "additionalProperties": {
              "type": "string",
              "description": "Declares a new parameter by name."
             }
            },
            "payload": {
             "type": "boolean",
             "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "resourceId": {
             "type": "string",
             "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
             "type": "string",
             "description": "A version-specific identifier for the watched resource."
            },
            "token": {
             "type": "string",
             "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "type": {
             "type": "string",
             "description": "The type of delivery mechanism used for this channel."
            }
           }
          },
          "ChildList": {
           "id": "ChildList",
           "type": "object",
           "description": "A list of children of a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of children.",
             "items": {
              "$ref": "ChildReference"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#childList.",
             "default": "drive#childList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of children."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of children."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ChildReference": {
           "id": "ChildReference",
           "type": "object",
           "description": "A reference to a folder's child.",
           "properties": {
            "childLink": {
             "type": "string",
             "description": "A link to the child."
            },
            "id": {
             "type": "string",
             "description": "The ID of the child.",
             "annotations": {
              "required": [
               "drive.children.insert"
              ]
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#childReference.",
             "default": "drive#childReference"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this reference."
            }
           }
          },
          "Comment": {
           "id": "Comment",
           "type": "object",
           "description": "A JSON representation of a comment on a file in Google Drive.",
           "properties": {
            "anchor": {
             "type": "string",
             "description": "A region of the document represented as a JSON string. See anchor documentation for details on how to define and interpret anchor properties."
            },
            "author": {
             "$ref": "User",
             "description": "The user who wrote this comment."
            },
            "commentId": {
             "type": "string",
             "description": "The ID of the comment."
            },
            "content": {
             "type": "string",
             "description": "The plain text content used to create this comment. This is not HTML safe and should only be used as a starting point to make edits to a comment's content.",
             "annotations": {
              "required": [
               "drive.comments.insert",
               "drive.comments.update"
              ]
             }
            },
            "context": {
             "type": "object",
             "description": "The context of the file which is being commented on.",
             "properties": {
              "type": {
               "type": "string",
               "description": "The MIME type of the context snippet."
              },
              "value": {
               "type": "string",
               "description": "Data representation of the segment of the file being commented on. In the case of a text file for example, this would be the actual text that the comment is about."
              }
             }
            },
            "createdDate": {
             "type": "string",
             "description": "The date when this comment was first created.",
             "format": "date-time"
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this comment has been deleted. If a comment has been deleted the content will be cleared and this will only represent a comment that once existed."
            },
            "fileId": {
             "type": "string",
             "description": "The file which this comment is addressing."
            },
            "fileTitle": {
             "type": "string",
             "description": "The title of the file which this comment is addressing."
            },
            "htmlContent": {
             "type": "string",
             "description": "HTML formatted content for this comment."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#comment.",
             "default": "drive#comment"
            },
            "modifiedDate": {
             "type": "string",
             "description": "The date when this comment or any of its replies were last modified.",
             "format": "date-time"
            },
            "replies": {
             "type": "array",
             "description": "Replies to this post.",
             "items": {
              "$ref": "CommentReply"
             }
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this comment."
            },
            "status": {
             "type": "string",
             "description": "The status of this comment. Status can be changed by posting a reply to a comment with the desired status.  \n- \"open\" - The comment is still open. \n- \"resolved\" - The comment has been resolved by one of its replies."
            }
           }
          },
          "CommentList": {
           "id": "CommentList",
           "type": "object",
           "description": "A JSON representation of a list of comments on a file in Google Drive.",
           "properties": {
            "items": {
             "type": "array",
             "description": "List of comments.",
             "items": {
              "$ref": "Comment"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentList.",
             "default": "drive#commentList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of comments."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The token to use to request the next page of results."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "CommentReply": {
           "id": "CommentReply",
           "type": "object",
           "description": "A JSON representation of a reply to a comment on a file in Google Drive.",
           "properties": {
            "author": {
             "$ref": "User",
             "description": "The user who wrote this reply."
            },
            "content": {
             "type": "string",
             "description": "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen).",
             "annotations": {
              "required": [
               "drive.replies.update"
              ]
             }
            },
            "createdDate": {
             "type": "string",
             "description": "The date when this reply was first created.",
             "format": "date-time"
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed."
            },
            "htmlContent": {
             "type": "string",
             "description": "HTML formatted content for this reply."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentReply.",
             "default": "drive#commentReply"
            },
            "modifiedDate": {
             "type": "string",
             "description": "The date when this reply was last modified.",
             "format": "date-time"
            },
            "replyId": {
             "type": "string",
             "description": "The ID of the reply."
            },
            "verb": {
             "type": "string",
             "description": "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  \n- \"resolve\" - To resolve a comment. \n- \"reopen\" - To reopen (un-resolve) a comment."
            }
           }
          },
          "CommentReplyList": {
           "id": "CommentReplyList",
           "type": "object",
           "description": "A JSON representation of a list of replies to a comment on a file in Google Drive.",
           "properties": {
            "items": {
             "type": "array",
             "description": "List of reply.",
             "items": {
              "$ref": "CommentReply"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentReplyList.",
             "default": "drive#commentReplyList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of replies."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The token to use to request the next page of results."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "File": {
           "id": "File",
           "type": "object",
           "description": "The metadata for a file.",
           "properties": {
            "alternateLink": {
             "type": "string",
             "description": "A link for opening the file in using a relevant Google editor or viewer."
            },
            "appDataContents": {
             "type": "boolean",
             "description": "Whether this file is in the appdata folder."
            },
            "copyable": {
             "type": "boolean",
             "description": "Whether the file can be copied by the current user."
            },
            "createdDate": {
             "type": "string",
             "description": "Create time for this file (formatted ISO8601 timestamp).",
             "format": "date-time"
            },
            "defaultOpenWithLink": {
             "type": "string",
             "description": "A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used."
            },
            "description": {
             "type": "string",
             "description": "A short description of the file."
            },
            "downloadUrl": {
             "type": "string",
             "description": "Short lived download URL for the file. This is only populated for files with content stored in Drive."
            },
            "editable": {
             "type": "boolean",
             "description": "Whether the file can be edited by the current user."
            },
            "embedLink": {
             "type": "string",
             "description": "A link for embedding the file."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the file."
            },
            "explicitlyTrashed": {
             "type": "boolean",
             "description": "Whether this file has been explicitly trashed, as opposed to recursively trashed. This will only be populated if the file is trashed."
            },
            "exportLinks": {
             "type": "object",
             "description": "Links for exporting Google Docs to specific formats.",
             "additionalProperties": {
              "type": "string",
              "description": "A mapping from export format to URL"
             }
            },
            "fileExtension": {
             "type": "string",
             "description": "The file extension used when downloading this file. This field is read only. To set the extension, include it in the title when creating the file. This is only populated for files with content stored in Drive."
            },
            "fileSize": {
             "type": "string",
             "description": "The size of the file in bytes. This is only populated for files with content stored in Drive.",
             "format": "int64"
            },
            "headRevisionId": {
             "type": "string",
             "description": "The ID of the file's head revision. This will only be populated for files with content stored in Drive."
            },
            "iconLink": {
             "type": "string",
             "description": "A link to the file's icon."
            },
            "id": {
             "type": "string",
             "description": "The ID of the file."
            },
            "imageMediaMetadata": {
             "type": "object",
             "description": "Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.",
             "properties": {
              "aperture": {
               "type": "number",
               "description": "The aperture used to create the photo (f-number).",
               "format": "float"
              },
              "cameraMake": {
               "type": "string",
               "description": "The make of the camera used to create the photo."
              },
              "cameraModel": {
               "type": "string",
               "description": "The model of the camera used to create the photo."
              },
              "colorSpace": {
               "type": "string",
               "description": "The color space of the photo."
              },
              "date": {
               "type": "string",
               "description": "The date and time the photo was taken (EXIF format timestamp)."
              },
              "exposureBias": {
               "type": "number",
               "description": "The exposure bias of the photo (APEX value).",
               "format": "float"
              },
              "exposureMode": {
               "type": "string",
               "description": "The exposure mode used to create the photo."
              },
              "exposureTime": {
               "type": "number",
               "description": "The length of the exposure, in seconds.",
               "format": "float"
              },
              "flashUsed": {
               "type": "boolean",
               "description": "Whether a flash was used to create the photo."
              },
              "focalLength": {
               "type": "number",
               "description": "The focal length used to create the photo, in millimeters.",
               "format": "float"
              },
              "height": {
               "type": "integer",
               "description": "The height of the image in pixels.",
               "format": "int32"
              },
              "isoSpeed": {
               "type": "integer",
               "description": "The ISO speed used to create the photo.",
               "format": "int32"
              },
              "lens": {
               "type": "string",
               "description": "The lens used to create the photo."
              },
              "location": {
               "type": "object",
               "description": "Geographic location information stored in the image.",
               "properties": {
                "altitude": {
                 "type": "number",
                 "description": "The altitude stored in the image.",
                 "format": "double"
                },
                "latitude": {
                 "type": "number",
                 "description": "The latitude stored in the image.",
                 "format": "double"
                },
                "longitude": {
                 "type": "number",
                 "description": "The longitude stored in the image.",
                 "format": "double"
                }
               }
              },
              "maxApertureValue": {
               "type": "number",
               "description": "The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
               "format": "float"
              },
              "meteringMode": {
               "type": "string",
               "description": "The metering mode used to create the photo."
              },
              "rotation": {
               "type": "integer",
               "description": "The rotation in clockwise degrees from the image's original orientation.",
               "format": "int32"
              },
              "sensor": {
               "type": "string",
               "description": "The type of sensor used to create the photo."
              },
              "subjectDistance": {
               "type": "integer",
               "description": "The distance to the subject of the photo, in meters.",
               "format": "int32"
              },
              "whiteBalance": {
               "type": "string",
               "description": "The white balance mode used to create the photo."
              },
              "width": {
               "type": "integer",
               "description": "The width of the image in pixels.",
               "format": "int32"
              }
             }
            },
            "indexableText": {
             "type": "object",
             "description": "Indexable text attributes for the file (can only be written)",
             "properties": {
              "text": {
               "type": "string",
               "description": "The text to be indexed for this file."
              }
             }
            },
            "kind": {
             "type": "string",
             "description": "The type of file. This is always drive#file.",
             "default": "drive#file"
            },
            "labels": {
             "type": "object",
             "description": "A group of labels for the file.",
             "properties": {
              "hidden": {
               "type": "boolean",
               "description": "Whether this file is hidden from the user."
              },
              "restricted": {
               "type": "boolean",
               "description": "Whether viewers are prevented from downloading this file."
              },
              "starred": {
               "type": "boolean",
               "description": "Whether this file is starred by the user."
              },
              "trashed": {
               "type": "boolean",
               "description": "Whether this file has been trashed."
              },
              "viewed": {
               "type": "boolean",
               "description": "Whether this file has been viewed by this user."
              }
             }
            },
            "lastModifyingUser": {
             "$ref": "User",
             "description": "The last user to modify this file."
            },
            "lastModifyingUserName": {
             "type": "string",
             "description": "Name of the last user to modify this file."
            },
            "lastViewedByMeDate": {
             "type": "string",
             "description": "Last time this file was viewed by the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "md5Checksum": {
             "type": "string",
             "description": "An MD5 checksum for the content of this file. This is populated only for files with content stored in Drive."
            },
            "mimeType": {
             "type": "string",
             "description": "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type."
            },
            "modifiedByMeDate": {
             "type": "string",
             "description": "Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date.",
             "format": "date-time"
            },
            "modifiedDate": {
             "type": "string",
             "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.",
             "format": "date-time"
            },
            "openWithLinks": {
             "type": "object",
             "description": "A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.",
             "additionalProperties": {
              "type": "string"
             }
            },
            "originalFilename": {
             "type": "string",
             "description": "The original filename if the file was uploaded manually, or the original title if the file was inserted through the API. Note that renames of the title will not change the original filename. This will only be populated on files with content stored in Drive."
            },
            "ownerNames": {
             "type": "array",
             "description": "Name(s) of the owner(s) of this file.",
             "items": {
              "type": "string"
             }
            },
            "owners": {
             "type": "array",
             "description": "The owner(s) of this file.",
             "items": {
              "$ref": "User"
             }
            },
            "parents": {
             "type": "array",
             "description": "Collection of parent folders which contain this file.\nSetting this field will put the file in all of the provided folders. On insert, if no folders are provided, the file will be placed in the default root folder.",
             "items": {
              "$ref": "ParentReference"
             }
            },
            "properties": {
             "type": "array",
             "description": "The list of properties.",
             "items": {
              "$ref": "Property"
             }
            },
            "quotaBytesUsed": {
             "type": "string",
             "description": "The number of quota bytes used by this file.",
             "format": "int64"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this file."
            },
            "shared": {
             "type": "boolean",
             "description": "Whether the file has been shared."
            },
            "sharedWithMeDate": {
             "type": "string",
             "description": "Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "thumbnail": {
             "type": "object",
             "description": "Thumbnail for the file. Only accepted on upload and for files that are not already thumbnailed by Google.",
             "properties": {
              "image": {
               "type": "string",
               "description": "The URL-safe Base64 encoded bytes of the thumbnail image.",
               "format": "byte"
              },
              "mimeType": {
               "type": "string",
               "description": "The MIME type of the thumbnail."
              }
             }
            },
            "thumbnailLink": {
             "type": "string",
             "description": "A link to the file's thumbnail."
            },
            "title": {
             "type": "string",
             "description": "The title of this file."
            },
            "userPermission": {
             "$ref": "Permission",
             "description": "The permissions for the authenticated user on this file."
            },
            "webContentLink": {
             "type": "string",
             "description": "A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials."
            },
            "webViewLink": {
             "type": "string",
             "description": "A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting."
            },
            "writersCanShare": {
             "type": "boolean",
             "description": "Whether writers can share the document with other users."
            }
           }
          },
          "FileList": {
           "id": "FileList",
           "type": "object",
           "description": "A list of files.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of files.",
             "items": {
              "$ref": "File"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#fileList.",
             "default": "drive#fileList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of files."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of files."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ParentList": {
           "id": "ParentList",
           "type": "object",
           "description": "A list of a file's parents.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of parents.",
             "items": {
              "$ref": "ParentReference"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#parentList.",
             "default": "drive#parentList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ParentReference": {
           "id": "ParentReference",
           "type": "object",
           "description": "A reference to a file's parent.",
           "properties": {
            "id": {
             "type": "string",
             "description": "The ID of the parent.",
             "annotations": {
              "required": [
               "drive.parents.insert"
              ]
             }
            },
            "isRoot": {
             "type": "boolean",
             "description": "Whether or not the parent is the root folder."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#parentReference.",
             "default": "drive#parentReference"
            },
            "parentLink": {
             "type": "string",
             "description": "A link to the parent."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this reference."
            }
           }
          },
          "Permission": {
           "id": "Permission",
           "type": "object",
           "description": "A permission for a file.",
           "properties": {
            "additionalRoles": {
             "type": "array",
             "description": "Additional roles for this user. Only commenter is currently allowed.",
             "items": {
              "type": "string"
             }
            },
            "authKey": {
             "type": "string",
             "description": "The authkey parameter required for this permission."
            },
            "domain": {
             "type": "string",
             "description": "The domain name of the entity this permission refers to. This is an output-only field which is populated when the permission type is \"user\", \"group\" or \"domain\"."
            },
            "emailAddress": {
             "type": "string",
             "description": "The email address of the user this permission refers to. This is an output-only field which is populated when the permission type is \"user\" and the given user's Google+ profile privacy settings allow exposing their email address."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the permission."
            },
            "id": {
             "type": "string",
             "description": "The ID of the permission."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permission.",
             "default": "drive#permission"
            },
            "name": {
             "type": "string",
             "description": "The name for this permission."
            },
            "photoLink": {
             "type": "string",
             "description": "A link to the profile photo, if available."
            },
            "role": {
             "type": "string",
             "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer",
             "annotations": {
              "required": [
               "drive.permissions.insert"
              ]
             }
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this permission."
            },
            "type": {
             "type": "string",
             "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone",
             "annotations": {
              "required": [
               "drive.permissions.insert"
              ]
             }
            },
            "value": {
             "type": "string",
             "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses.",
             "annotations": {
              "required": [
               "drive.permissions.insert"
              ]
             }
            },
            "withLink": {
             "type": "boolean",
             "description": "Whether the link is required for this permission."
            }
           }
          },
          "PermissionList": {
           "id": "PermissionList",
           "type": "object",
           "description": "A list of permissions associated with a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of permissions.",
             "items": {
              "$ref": "Permission"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permissionList.",
             "default": "drive#permissionList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Property": {
           "id": "Property",
           "type": "object",
           "description": "A key-value pair that is either public or private to an application.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the property."
            },
            "key": {
             "type": "string",
             "description": "The key of this property."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#property.",
             "default": "drive#property"
            },
            "selfLink": {
             "type": "string",
             "description": "The link back to this property."
            },
            "value": {
             "type": "string",
             "description": "The value of this property."
            },
            "visibility": {
             "type": "string",
             "description": "The visibility of this property."
            }
           }
          },
          "PropertyList": {
           "id": "PropertyList",
           "type": "object",
           "description": "A collection of properties, key-value pairs that are either public or private to an application.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The list of properties.",
             "items": {
              "$ref": "Property"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#propertyList.",
             "default": "drive#propertyList"
            },
            "selfLink": {
             "type": "string",
             "description": "The link back to this list."
            }
           }
          },
          "Revision": {
           "id": "Revision",
           "type": "object",
           "description": "A revision of a file.",
           "properties": {
            "downloadUrl": {
             "type": "string",
             "description": "Short term download URL for the file. This will only be populated on files with content stored in Drive."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the revision."
            },
            "exportLinks": {
             "type": "object",
             "description": "Links for exporting Google Docs to specific formats.",
             "additionalProperties": {
              "type": "string",
              "description": "A mapping from export format to URL"
             }
            },
            "fileSize": {
             "type": "string",
             "description": "The size of the revision in bytes. This will only be populated on files with content stored in Drive.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "The ID of the revision."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#revision.",
             "default": "drive#revision"
            },
            "lastModifyingUser": {
             "$ref": "User",
             "description": "The last user to modify this revision."
            },
            "lastModifyingUserName": {
             "type": "string",
             "description": "Name of the last user to modify this revision."
            },
            "md5Checksum": {
             "type": "string",
             "description": "An MD5 checksum for the content of this revision. This will only be populated on files with content stored in Drive."
            },
            "mimeType": {
             "type": "string",
             "description": "The MIME type of the revision."
            },
            "modifiedDate": {
             "type": "string",
             "description": "Last time this revision was modified (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "originalFilename": {
             "type": "string",
             "description": "The original filename when this revision was created. This will only be populated on files with content stored in Drive."
            },
            "pinned": {
             "type": "boolean",
             "description": "Whether this revision is pinned to prevent automatic purging. This will only be populated and can only be modified on files with content stored in Drive which are not Google Docs. Revisions can also be pinned when they are created through the drive.files.insert/update/copy by using the pinned query parameter."
            },
            "publishAuto": {
             "type": "boolean",
             "description": "Whether subsequent revisions will be automatically republished. This is only populated and can only be modified for Google Docs."
            },
            "published": {
             "type": "boolean",
             "description": "Whether this revision is published. This is only populated and can only be modified for Google Docs."
            },
            "publishedLink": {
             "type": "string",
             "description": "A link to the published revision."
            },
            "publishedOutsideDomain": {
             "type": "boolean",
             "description": "Whether this revision is published outside the domain. This is only populated and can only be modified for Google Docs."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this revision."
            }
           }
          },
          "RevisionList": {
           "id": "RevisionList",
           "type": "object",
           "description": "A list of revisions of a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of revisions.",
             "items": {
              "$ref": "Revision"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#revisionList.",
             "default": "drive#revisionList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "User": {
           "id": "User",
           "type": "object",
           "description": "The JSON template for a user.",
           "properties": {
            "displayName": {
             "type": "string",
             "description": "A plain text displayable name for this user."
            },
            "isAuthenticatedUser": {
             "type": "boolean",
             "description": "Whether this user is the same as the authenticated user for whom the request was made."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#user.",
             "default": "drive#user"
            },
            "permissionId": {
             "type": "string",
             "description": "The user's ID as visible in the permissions collection."
            },
            "picture": {
             "type": "object",
             "description": "The user's profile picture.",
             "properties": {
              "url": {
               "type": "string",
               "description": "A URL that points to a profile picture of this user."
              }
             }
            }
           }
          }
         },
         "resources": {
          "about": {
           "methods": {
            "get": {
             "id": "drive.about.get",
             "path": "about",
             "httpMethod": "GET",
             "description": "Gets the information about the current user along with Drive API settings",
             "parameters": {
              "includeSubscribed": {
               "type": "boolean",
               "description": "When calculating the number of remaining change IDs, whether to include shared files and public files the user has opened. When set to false, this counts only change IDs for owned files and any shared or public files that the user has explictly added to a folder in Drive.",
               "default": "true",
               "location": "query"
              },
              "maxChangeIdCount": {
               "type": "string",
               "description": "Maximum number of remaining change IDs to count",
               "default": "1",
               "format": "int64",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start counting from when calculating number of remaining change IDs",
               "format": "int64",
               "location": "query"
              }
             },
             "response": {
              "$ref": "About"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "apps": {
           "methods": {
            "get": {
             "id": "drive.apps.get",
             "path": "apps/{appId}",
             "httpMethod": "GET",
             "description": "Gets a specific app.",
             "parameters": {
              "appId": {
               "type": "string",
               "description": "The ID of the app.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "appId"
             ],
             "response": {
              "$ref": "App"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive.apps.readonly"
             ]
            },
            "list": {
             "id": "drive.apps.list",
             "path": "apps",
             "httpMethod": "GET",
             "description": "Lists a user's installed apps.",
             "response": {
              "$ref": "AppList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive.apps.readonly"
             ]
            }
           }
          },
          "changes": {
           "methods": {
            "get": {
             "id": "drive.changes.get",
             "path": "changes/{changeId}",
             "httpMethod": "GET",
             "description": "Gets a specific change.",
             "parameters": {
              "changeId": {
               "type": "string",
               "description": "The ID of the change.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "changeId"
             ],
             "response": {
              "$ref": "Change"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.changes.list",
             "path": "changes",
             "httpMethod": "GET",
             "description": "Lists the changes for a user.",
             "parameters": {
              "includeDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted items.",
               "default": "true",
               "location": "query"
              },
              "includeSubscribed": {
               "type": "boolean",
               "description": "Whether to include shared files and public files the user has opened. When set to false, the list will include owned files plus any shared or public files the user has explictly added to a folder in Drive.",
               "default": "true",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of changes to return.",
               "default": "100",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for changes.",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start listing changes from.",
               "format": "int64",
               "location": "query"
              }
             },
             "response": {
              "$ref": "ChangeList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            },
            "watch": {
             "id": "drive.changes.watch",
             "path": "changes/watch",
             "httpMethod": "POST",
             "description": "Subscribe to changes for a user.",
             "parameters": {
              "includeDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted items.",
               "default": "true",
               "location": "query"
              },
              "includeSubscribed": {
               "type": "boolean",
               "description": "Whether to include shared files and public files the user has opened. When set to false, the list will include owned files plus any shared or public files the user has explictly added to a folder in Drive.",
               "default": "true",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of changes to return.",
               "default": "100",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for changes.",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start listing changes from.",
               "format": "int64",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "channels": {
           "methods": {
            "stop": {
             "id": "drive.channels.stop",
             "path": "channels/stop",
             "httpMethod": "POST",
             "description": "Stop watching resources through this channel",
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "children": {
           "methods": {
            "delete": {
             "id": "drive.children.delete",
             "path": "files/{folderId}/children/{childId}",
             "httpMethod": "DELETE",
             "description": "Removes a child from a folder.",
             "parameters": {
              "childId": {
               "type": "string",
               "description": "The ID of the child.",
               "required": true,
               "location": "path"
              },
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId",
              "childId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.children.get",
             "path": "files/{folderId}/children/{childId}",
             "httpMethod": "GET",
             "description": "Gets a specific child reference.",
             "parameters": {
              "childId": {
               "type": "string",
               "description": "The ID of the child.",
               "required": true,
               "location": "path"
              },
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId",
              "childId"
             ],
             "response": {
              "$ref": "ChildReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.children.insert",
             "path": "files/{folderId}/children",
             "httpMethod": "POST",
             "description": "Inserts a file into a folder.",
             "parameters": {
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId"
             ],
             "request": {
              "$ref": "ChildReference"
             },
             "response": {
              "$ref": "ChildReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.children.list",
             "path": "files/{folderId}/children",
             "httpMethod": "GET",
             "description": "Lists a folder's children.",
             "parameters": {
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of children to return.",
               "default": "100",
               "format": "int32",
               "minimum": "0",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for children.",
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Query string for searching children.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "folderId"
             ],
             "response": {
              "$ref": "ChildList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "comments": {
           "methods": {
            "delete": {
             "id": "drive.comments.delete",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "DELETE",
             "description": "Deletes a comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "get": {
             "id": "drive.comments.get",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "GET",
             "description": "Gets a comment by ID.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, this will succeed when retrieving a deleted comment, and will include any deleted replies.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.comments.insert",
             "path": "files/{fileId}/comments",
             "httpMethod": "POST",
             "description": "Creates a new comment on the given file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.comments.list",
             "path": "files/{fileId}/comments",
             "httpMethod": "GET",
             "description": "Lists a file's comments.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, all comments and replies, including deleted comments and replies (with content stripped) will be returned.",
               "default": "false",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "The maximum number of discussions to include in the response, used for paging.",
               "default": "20",
               "format": "int32",
               "minimum": "0",
               "maximum": "100",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Only discussions that were updated after this timestamp will be returned. Formatted as an RFC 3339 timestamp.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "CommentList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.comments.patch",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "PATCH",
             "description": "Updates an existing comment. This method supports patch semantics.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.comments.update",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "PUT",
             "description": "Updates an existing comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "files": {
           "methods": {
            "copy": {
             "id": "drive.files.copy",
             "path": "files/{fileId}/copy",
             "httpMethod": "POST",
             "description": "Creates a copy of the specified file.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to copy.",
               "required": true,
               "location": "path"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the head revision of the new copy.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the new file. This parameter is only relevant when the source is not a native Google Doc and convert=false.",
               "default": "DEFAULT",
               "enum": [
                "DEFAULT",
                "PRIVATE"
               ],
               "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
               ],
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "delete": {
             "id": "drive.files.delete",
             "path": "files/{fileId}",
             "httpMethod": "DELETE",
             "description": "Permanently deletes a file by ID. Skips the trash.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to delete.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.files.get",
             "path": "files/{fileId}",
             "httpMethod": "GET",
             "description": "Gets a file's metadata by ID.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file in question.",
               "required": true,
               "location": "path"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully retrieving the file.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            },
            "insert": {
             "id": "drive.files.insert",
             "path": "files",
             "httpMethod": "POST",
             "description": "Insert a new file.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the head revision of the uploaded file.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the new file. This parameter is only relevant when convert=false.",
               "default": "DEFAULT",
               "enum": [
                "DEFAULT",
                "PRIVATE"
               ],
               "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
               ],
               "location": "query"
              }
             },
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "10GB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files"
               }
              }
             },
             "supportsSubscription": true
            },
            "list": {
             "id": "drive.files.list",
             "path": "files",
             "httpMethod": "GET",
             "description": "Lists the user's files.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of files to return.",
               "default": "100",
               "format": "int32",
               "minimum": "0",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for files.",
               "location": "query"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Query string for searching files.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "FileList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.files.patch",
             "path": "files/{fileId}",
             "httpMethod": "PATCH",
             "description": "Updates file metadata and/or content. This method supports patch semantics.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              },
              "newRevision": {
               "type": "boolean",
               "description": "Whether a blob upload should create a new revision. If not set or false, the blob data in the current head revision is replaced. If true, a new blob is created as head revision, and previous revisions are preserved (causing increased use of the user's data storage quota).",
               "default": "true",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the new revision.",
               "default": "false",
               "location": "query"
              },
              "setModifiedDate": {
               "type": "boolean",
               "description": "Whether to set the modified date with the supplied modified date.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully updating the file.",
               "default": "true",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.scripts"
             ]
            },
            "touch": {
             "id": "drive.files.touch",
             "path": "files/{fileId}/touch",
             "httpMethod": "POST",
             "description": "Set the file's updated time to the current server time.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "trash": {
             "id": "drive.files.trash",
             "path": "files/{fileId}/trash",
             "httpMethod": "POST",
             "description": "Moves a file to the trash.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to trash.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "untrash": {
             "id": "drive.files.untrash",
             "path": "files/{fileId}/untrash",
             "httpMethod": "POST",
             "description": "Restores a file from the trash.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to untrash.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.files.update",
             "path": "files/{fileId}",
             "httpMethod": "PUT",
             "description": "Updates file metadata and/or content.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              },
              "newRevision": {
               "type": "boolean",
               "description": "Whether a blob upload should create a new revision. If not set or false, the blob data in the current head revision is replaced. If true, a new blob is created as head revision, and previous revisions are preserved (causing increased use of the user's data storage quota).",
               "default": "true",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the new revision.",
               "default": "false",
               "location": "query"
              },
              "setModifiedDate": {
               "type": "boolean",
               "description": "Whether to set the modified date with the supplied modified date.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully updating the file.",
               "default": "true",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.scripts"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "10GB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files/{fileId}"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}"
               }
              }
             }
            },
            "watch": {
             "id": "drive.files.watch",
             "path": "files/{fileId}/watch",
             "httpMethod": "POST",
             "description": "Subscribe to changes on a file",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file in question.",
               "required": true,
               "location": "path"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully retrieving the file.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "parents": {
           "methods": {
            "delete": {
             "id": "drive.parents.delete",
             "path": "files/{fileId}/parents/{parentId}",
             "httpMethod": "DELETE",
             "description": "Removes a parent from a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "parentId": {
               "type": "string",
               "description": "The ID of the parent.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "parentId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.parents.get",
             "path": "files/{fileId}/parents/{parentId}",
             "httpMethod": "GET",
             "description": "Gets a specific parent reference.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "parentId": {
               "type": "string",
               "description": "The ID of the parent.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "parentId"
             ],
             "response": {
              "$ref": "ParentReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.parents.insert",
             "path": "files/{fileId}/parents",
             "httpMethod": "POST",
             "description": "Adds a parent folder for a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "ParentReference"
             },
             "response": {
              "$ref": "ParentReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.parents.list",
             "path": "files/{fileId}/parents",
             "httpMethod": "GET",
             "description": "Lists a file's parents.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "ParentList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "permissions": {
           "methods": {
            "delete": {
             "id": "drive.permissions.delete",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "DELETE",
             "description": "Deletes a permission from a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.permissions.get",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "GET",
             "description": "Gets a permission by ID.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.permissions.insert",
             "path": "files/{fileId}/permissions",
             "httpMethod": "POST",
             "description": "Inserts a permission for a file.",
             "parameters": {
              "emailMessage": {
               "type": "string",
               "description": "A custom message to include in notification emails.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "sendNotificationEmails": {
               "type": "boolean",
               "description": "Whether to send notification emails when sharing to users or groups.",
               "default": "true",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.permissions.list",
             "path": "files/{fileId}/permissions",
             "httpMethod": "GET",
             "description": "Lists a file's permissions.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "PermissionList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.permissions.patch",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "PATCH",
             "description": "Updates a permission. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              },
              "transferOwnership": {
               "type": "boolean",
               "description": "Whether changing a role to 'owner' should also downgrade the current owners to writers.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.permissions.update",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "PUT",
             "description": "Updates a permission.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              },
              "transferOwnership": {
               "type": "boolean",
               "description": "Whether changing a role to 'owner' should also downgrade the current owners to writers.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "properties": {
           "methods": {
            "delete": {
             "id": "drive.properties.delete",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "DELETE",
             "description": "Deletes a property.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.properties.get",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "GET",
             "description": "Gets a property by its key.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.properties.insert",
             "path": "files/{fileId}/properties",
             "httpMethod": "POST",
             "description": "Adds a property to a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.properties.list",
             "path": "files/{fileId}/properties",
             "httpMethod": "GET",
             "description": "Lists a file's properties.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "PropertyList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.properties.patch",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "PATCH",
             "description": "Updates a property. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.properties.update",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "PUT",
             "description": "Updates a property.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "realtime": {
           "methods": {
            "get": {
             "id": "drive.realtime.get",
             "path": "files/{fileId}/realtime",
             "httpMethod": "GET",
             "description": "Exports the contents of the Realtime API data model associated with this file as JSON.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file that the Realtime API data model is associated with.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true
            }
           }
          },
          "replies": {
           "methods": {
            "delete": {
             "id": "drive.replies.delete",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "DELETE",
             "description": "Deletes a reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.replies.get",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "GET",
             "description": "Gets a reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, this will succeed when retrieving a deleted reply.",
               "default": "false",
               "location": "query"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.replies.insert",
             "path": "files/{fileId}/comments/{commentId}/replies",
             "httpMethod": "POST",
             "description": "Creates a new reply to the given comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.replies.list",
             "path": "files/{fileId}/comments/{commentId}/replies",
             "httpMethod": "GET",
             "description": "Lists all of the replies to a comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, all replies, including deleted replies (with content stripped) will be returned.",
               "default": "false",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "The maximum number of replies to include in the response, used for paging.",
               "default": "20",
               "format": "int32",
               "minimum": "0",
               "maximum": "100",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "response": {
              "$ref": "CommentReplyList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.replies.patch",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "PATCH",
             "description": "Updates an existing reply. This method supports patch semantics.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.replies.update",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "PUT",
             "description": "Updates an existing reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "revisions": {
           "methods": {
            "delete": {
             "id": "drive.revisions.delete",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "DELETE",
             "description": "Removes a revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID of the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.revisions.get",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "GET",
             "description": "Gets a specific revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID of the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.revisions.list",
             "path": "files/{fileId}/revisions",
             "httpMethod": "GET",
             "description": "Lists a file's revisions.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "RevisionList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.revisions.patch",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "PATCH",
             "description": "Updates a revision. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID for the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "request": {
              "$ref": "Revision"
             },
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.revisions.update",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "PUT",
             "description": "Updates a revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID for the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "request": {
              "$ref": "Revision"
             },
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          }
         }
        }
    http_version: 
  recorded_at: Wed, 21 Aug 2013 02:53:13 GMT
- request:
    method: post
    uri: https://www.googleapis.com/drive/v2/files
    body:
      encoding: UTF-8
      string: '{"title":"worochi_insertion_test","parents":{"id":"0B30CGkhrN5qzaUJGbFNDRjl0S2M"},"mimeType":"application/vnd.google-apps.folder"}'
    headers:
      User-Agent:
      - Worochi/0.0.14 google-api-ruby-client/0.6.4 Linux/3.5.0-17-generic
      Content-Type:
      - application/json
      Authorization:
      - Bearer <GOOGLE_TOKEN>
      Cache-Control:
      - no-store
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - '*/*'
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Date:
      - Wed, 21 Aug 2013 02:53:14 GMT
      Etag:
      - '"HK9znrxLd1pIgz63yXyznaLN5rM/MTM3NzA1MzU5MzY0Ng"'
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |
        {
         "kind": "drive#file",
         "id": "0B30CGkhrN5qzUUxzMDU4TkZtX0k",
         "etag": "\"HK9znrxLd1pIgz63yXyznaLN5rM/MTM3NzA1MzU5MzY0Ng\"",
         "selfLink": "https://www.googleapis.com/drive/v2/files/0B30CGkhrN5qzUUxzMDU4TkZtX0k",
         "alternateLink": "https://docs.google.com/folderview?id=0B30CGkhrN5qzUUxzMDU4TkZtX0k&usp=drivesdk",
         "iconLink": "https://ssl.gstatic.com/docs/doclist/images/icon_11_collection_list.png",
         "title": "worochi_insertion_test",
         "mimeType": "application/vnd.google-apps.folder",
         "labels": {
          "starred": false,
          "hidden": false,
          "trashed": false,
          "restricted": false,
          "viewed": true
         },
         "createdDate": "2013-08-21T02:53:13.649Z",
         "modifiedDate": "2013-08-21T02:53:13.646Z",
         "modifiedByMeDate": "2013-08-21T02:53:13.646Z",
         "lastViewedByMeDate": "2013-08-21T02:53:13.646Z",
         "parents": [
          {
           "kind": "drive#parentReference",
           "id": "0AH0CGkhrN5qzUk9PVA",
           "selfLink": "https://www.googleapis.com/drive/v2/files/0B30CGkhrN5qzUUxzMDU4TkZtX0k/parents/0AH0CGkhrN5qzUk9PVA",
           "parentLink": "https://www.googleapis.com/drive/v2/files/0AH0CGkhrN5qzUk9PVA",
           "isRoot": true
          }
         ],
         "userPermission": {
          "kind": "drive#permission",
          "etag": "\"HK9znrxLd1pIgz63yXyznaLN5rM/lTKKgpBSUMfdYVMRnd0Z4J5M_VA\"",
          "id": "me",
          "selfLink": "https://www.googleapis.com/drive/v2/files/0B30CGkhrN5qzUUxzMDU4TkZtX0k/permissions/me",
          "role": "owner",
          "type": "user"
         },
         "quotaBytesUsed": "0",
         "ownerNames": [
          "Raven Jiang"
         ],
         "owners": [
          {
           "kind": "drive#user",
           "displayName": "Raven Jiang",
           "picture": {
            "url": "https://lh6.googleusercontent.com/-PDFZ8S6OuGM/AAAAAAAAAAI/AAAAAAAACoo/1PfpLBrZcIQ/s64/photo.jpg"
           },
           "isAuthenticatedUser": true,
           "permissionId": "04143910787253564251"
          }
         ],
         "lastModifyingUserName": "Raven Jiang",
         "lastModifyingUser": {
          "kind": "drive#user",
          "displayName": "Raven Jiang",
          "picture": {
           "url": "https://lh6.googleusercontent.com/-PDFZ8S6OuGM/AAAAAAAAAAI/AAAAAAAACoo/1PfpLBrZcIQ/s64/photo.jpg"
          },
          "isAuthenticatedUser": true,
          "permissionId": "04143910787253564251"
         },
         "editable": true,
         "copyable": false,
         "writersCanShare": true,
         "shared": false,
         "appDataContents": false
        }
    http_version: 
  recorded_at: Wed, 21 Aug 2013 02:53:14 GMT
- request:
    method: get
    uri: https://www.googleapis.com/drive/v2/files?fields=items(id,mimeType,title),nextPageToken&q='root'%20in%20parents
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - Worochi/0.0.14 google-api-ruby-client/0.6.4 Linux/3.5.0-17-generic
      Authorization:
      - Bearer <GOOGLE_TOKEN>
      Cache-Control:
      - no-store
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - '*/*'
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Wed, 21 Aug 2013 02:53:15 GMT
      Date:
      - Wed, 21 Aug 2013 02:53:15 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"HK9znrxLd1pIgz63yXyznaLN5rM/ScQYQoSqCymfdUPJy_2xFffoKQo"'
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogIml0ZW1zIjogWwogIHsKICAgImlkIjogIjBCMzBDR2tock41cXpVVXh6
        TURVNFRrWnRYMGsiLAogICAidGl0bGUiOiAid29yb2NoaV9pbnNlcnRpb25f
        dGVzdCIsCiAgICJtaW1lVHlwZSI6ICJhcHBsaWNhdGlvbi92bmQuZ29vZ2xl
        LWFwcHMuZm9sZGVyIgogIH0sCiAgewogICAiaWQiOiAiMEIzMENHa2hyTjVx
        elRISlNXWFpsT1hvNWRsayIsCiAgICJ0aXRsZSI6ICJhYmMiLAogICAibWlt
        ZVR5cGUiOiAiZm9vL2JhciIKICB9LAogIHsKICAgImlkIjogIjBCMzBDR2to
        ck41cXpOVVIyZG5seVlrVkRhMFUiLAogICAidGl0bGUiOiAid29yb2NoaV9p
        bnNlcnRpb25fdGVzdCIsCiAgICJtaW1lVHlwZSI6ICJhcHBsaWNhdGlvbi92
        bmQuZ29vZ2xlLWFwcHMuZm9sZGVyIgogIH0sCiAgewogICAiaWQiOiAiMEIz
        MENHa2hyTjVxelNsQTFlR2czYmw5R1ZsRSIsCiAgICJ0aXRsZSI6ICJ3b3Jv
        Y2hpX2luc2VydGlvbl90ZXN0IiwKICAgIm1pbWVUeXBlIjogImFwcGxpY2F0
        aW9uL3ZuZC5nb29nbGUtYXBwcy5mb2xkZXIiCiAgfSwKICB7CiAgICJpZCI6
        ICIwQjMwQ0draHJONXF6VVZWRFZEVnhjMGhIWDJjIiwKICAgInRpdGxlIjog
        Indvcm9jaGlfaW5zZXJ0aW9uX3Rlc3QiLAogICAibWltZVR5cGUiOiAiYXBw
        bGljYXRpb24vdm5kLmdvb2dsZS1hcHBzLmZvbGRlciIKICB9LAogIHsKICAg
        ImlkIjogIjBCMzBDR2tock41cXpTazFhUjBKSU1URlpTRkUiLAogICAidGl0
        bGUiOiAid29yb2NoaV9pbnNlcnRpb25fdGVzdCIsCiAgICJtaW1lVHlwZSI6
        ICJhcHBsaWNhdGlvbi92bmQuZ29vZ2xlLWFwcHMuZm9sZGVyIgogIH0sCiAg
        ewogICAiaWQiOiAiMEIzMENHa2hyTjVxemNFWllUblJQVWxZelZHYyIsCiAg
        ICJ0aXRsZSI6ICJVbnRpdGxlZCIsCiAgICJtaW1lVHlwZSI6ICJhcHBsaWNh
        dGlvbi9vY3RldC1zdHJlYW0iCiAgfSwKICB7CiAgICJpZCI6ICIwQjMwQ0dr
        aHJONXF6U0ZoeGQzVjBNVmh5UzI4IiwKICAgInRpdGxlIjogIndvcm9jaGki
        LAogICAibWltZVR5cGUiOiAiYXBwbGljYXRpb24vdm5kLmdvb2dsZS1hcHBz
        LmZvbGRlciIKICB9LAogIHsKICAgImlkIjogIjBBbjBDR2tock41cXpkSFpX
        VTNWaFZqQkNTVVJZYjJoeFVtWjVXVXg2YjBFIiwKICAgInRpdGxlIjogIkVN
        QkEgQ29tcGFuaWVzIiwKICAgIm1pbWVUeXBlIjogImFwcGxpY2F0aW9uL3Zu
        ZC5nb29nbGUtYXBwcy5zcHJlYWRzaGVldCIKICB9LAogIHsKICAgImlkIjog
        IjBCMzBDR2tock41cXpOWFJqWm1oeFlrVkxTa0UiLAogICAidGl0bGUiOiAi
        VW50aXRsZWQgRGlhZ3JhbSIsCiAgICJtaW1lVHlwZSI6ICJhcHBsaWNhdGlv
        bi9teGUiCiAgfSwKICB7CiAgICJpZCI6ICIwQjMwQ0draHJONXF6YVMxMVQz
        aFVUR2M0VDJzIiwKICAgInRpdGxlIjogIkRlY2lzaW9uIFRyZWUiLAogICAi
        bWltZVR5cGUiOiAiYXBwbGljYXRpb24vbXhlIgogIH0sCiAgewogICAiaWQi
        OiAiMEIzMENHa2hyTjVxelFXRlJZVGc0V0VKcWVUZyIsCiAgICJ0aXRsZSI6
        ICJVbnRpdGxlZCBEaWFncmFtIiwKICAgIm1pbWVUeXBlIjogImFwcGxpY2F0
        aW9uL214ZSIKICB9LAogIHsKICAgImlkIjogIjBCMzBDR2tock41cXpZbXR3
        VURadk5WRm1Ra0UiLAogICAidGl0bGUiOiAiRGVjaXNpb24gRGlhZ3JhbSIs
        CiAgICJtaW1lVHlwZSI6ICJhcHBsaWNhdGlvbi9teGUiCiAgfSwKICB7CiAg
        ICJpZCI6ICIwQjMwQ0draHJONXF6ZUU5bmF6QjVUMlpHT1UwIiwKICAgInRp
        dGxlIjogIlVudGl0bGVkIERpYWdyYW0iLAogICAibWltZVR5cGUiOiAiYXBw
        bGljYXRpb24vbXhlIgogIH0sCiAgewogICAiaWQiOiAiMWdJMUQ4ck00SzQ2
        OHo5Um1hY3ZpVElkQ3cyQzlJc0hQQVEyRjMwby13c1UiLAogICAidGl0bGUi
        OiAiVW50aXRsZWQgcHJlc2VudGF0aW9uIiwKICAgIm1pbWVUeXBlIjogImFw
        cGxpY2F0aW9uL3ZuZC5nb29nbGUtYXBwcy5wcmVzZW50YXRpb24iCiAgfSwK
        ICB7CiAgICJpZCI6ICIwQjMwQ0draHJONXF6UkdwTVIwdFVWWFJ1VmpRIiwK
        ICAgInRpdGxlIjogIkRlY2lzaW9uIFRyZWUiLAogICAibWltZVR5cGUiOiAi
        YXBwbGljYXRpb24vbXhlIgogIH0sCiAgewogICAiaWQiOiAiMEIzMENHa2hy
        TjVxemVEWkZXRU16VFVSalEyTSIsCiAgICJ0aXRsZSI6ICJVbnRpdGxlZCBE
        aWFncmFtIiwKICAgIm1pbWVUeXBlIjogImFwcGxpY2F0aW9uL214ZSIKICB9
        LAogIHsKICAgImlkIjogIjBCMzBDR2tock41cXpUVzk2ZEV0aE1rOWZhMDAi
        LAogICAidGl0bGUiOiAiVW50aXRsZWQgRGlhZ3JhbSIsCiAgICJtaW1lVHlw
        ZSI6ICJhcHBsaWNhdGlvbi9teGUiCiAgfSwKICB7CiAgICJpZCI6ICIwQjMw
        Q0draHJONXF6TlZWdmQwbGZaa05hVUc4IiwKICAgInRpdGxlIjogIkRlY2lz
        aW9uIERpYWdyYW0gMiIsCiAgICJtaW1lVHlwZSI6ICJhcHBsaWNhdGlvbi9t
        eGUiCiAgfSwKICB7CiAgICJpZCI6ICIwQjMwQ0draHJONXF6U3pkSFlVMDRZ
        MFI2WVRBIiwKICAgInRpdGxlIjogIlVudGl0bGVkIERpYWdyYW0iLAogICAi
        bWltZVR5cGUiOiAiYXBwbGljYXRpb24vbXhlIgogIH0sCiAgewogICAiaWQi
        OiAiMEIzMENHa2hyTjVxemNXRTBNMmhYUjFOSGFHOCIsCiAgICJ0aXRsZSI6
        ICJVbnRpdGxlZCBEaWFncmFtIiwKICAgIm1pbWVUeXBlIjogImFwcGxpY2F0
        aW9uL214ZSIKICB9LAogIHsKICAgImlkIjogIjBCMzBDR2tock41cXplRXh5
        TTJOelNtOVRURmsiLAogICAidGl0bGUiOiAiVW50aXRsZWQgRGlhZ3JhbSIs
        CiAgICJtaW1lVHlwZSI6ICJhcHBsaWNhdGlvbi9teGUiCiAgfSwKICB7CiAg
        ICJpZCI6ICIwQjMwQ0draHJONXF6ZVU1T2FHUmZja1Z2UjAwIiwKICAgInRp
        dGxlIjogIlVudGl0bGVkIERpYWdyYW0iLAogICAibWltZVR5cGUiOiAiYXBw
        bGljYXRpb24vbXhlIgogIH0sCiAgewogICAiaWQiOiAiMU9zcEVMZFBscktX
        RXREQUVlWDgxam4xYk8tSXd5SHJqdnFfdl9VazVBaVUiLAogICAidGl0bGUi
        OiAiT25lIGluIGJpbGxpb25zIiwKICAgIm1pbWVUeXBlIjogImFwcGxpY2F0
        aW9uL3ZuZC5nb29nbGUtYXBwcy5kb2N1bWVudCIKICB9LAogIHsKICAgImlk
        IjogIjBCMzBDR2tock41cXpiVTkyVFV0c1EwOWZVWGMiLAogICAidGl0bGUi
        OiAib25lIGluIGJpbGxpb25zIiwKICAgIm1pbWVUeXBlIjogInRleHQvcGxh
        aW4iCiAgfSwKICB7CiAgICJpZCI6ICIwQW4wQ0draHJONXF6ZERjMWVUQkZl
        RUU0VldFd1FtSkVZVE5uZVZSelVsRSIsCiAgICJ0aXRsZSI6ICJTQVMgRnVu
        ZHMiLAogICAibWltZVR5cGUiOiAiYXBwbGljYXRpb24vdm5kLmdvb2dsZS1h
        cHBzLnNwcmVhZHNoZWV0IgogIH0sCiAgewogICAiaWQiOiAiMEIzMENHa2hy
        TjVxelltaE9kbU5uWjFKc2NYTSIsCiAgICJ0aXRsZSI6ICJWaXJ0dWFsX01h
        Y2hpbmVfTW9uaXRvcnMucHB0eCIsCiAgICJtaW1lVHlwZSI6ICJhcHBsaWNh
        dGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQucHJlc2Vu
        dGF0aW9ubWwucHJlc2VudGF0aW9uIgogIH0sCiAgewogICAiaWQiOiAiMEIz
        MENHa2hyTjVxelZ6ZFpiMUJqTm1OamJHYyIsCiAgICJ0aXRsZSI6ICJDU18x
        NDBfRmluYWxfUmV2aWV3LnBwdHgiLAogICAibWltZVR5cGUiOiAiYXBwbGlj
        YXRpb24vdm5kLm9wZW54bWxmb3JtYXRzLW9mZmljZWRvY3VtZW50LnByZXNl
        bnRhdGlvbm1sLnByZXNlbnRhdGlvbiIKICB9LAogIHsKICAgImlkIjogIjE5
        YWtZVGZpSzN6ZWhQcnhCUUNnb2ViTHVXZF9CRjBaN212c08yNGoyaVAwIiwK
        ICAgInRpdGxlIjogIkNTIDE0NCBGaW5hbCBSZXZpZXciLAogICAibWltZVR5
        cGUiOiAiYXBwbGljYXRpb24vdm5kLmdvb2dsZS1hcHBzLmRvY3VtZW50Igog
        IH0sCiAgewogICAiaWQiOiAiMTdwOEJYUE5MQThUZVJKY3R6bkRyWHlkdHIw
        TVVVdDQ0RGQ1clN0UWg5b0UiLAogICAidGl0bGUiOiAiSGlzdG9yeSA5NUMg
        RmluYWwgUmV2aWV3IiwKICAgIm1pbWVUeXBlIjogImFwcGxpY2F0aW9uL3Zu
        ZC5nb29nbGUtYXBwcy5kb2N1bWVudCIKICB9LAogIHsKICAgImlkIjogIjFx
        V0drTzY0aEp3TTZkSHlKQXd4Y3BWQlgzM1hFelFuU3RkeHBZWnVqbVJ3IiwK
        ICAgInRpdGxlIjogIkNTIDExMCBGaW5hbCBSZXZpZXciLAogICAibWltZVR5
        cGUiOiAiYXBwbGljYXRpb24vdm5kLmdvb2dsZS1hcHBzLmRvY3VtZW50Igog
        IH0sCiAgewogICAiaWQiOiAiMXRrdFpRWHdzelNaT3ZkT0xrejlKdTNPbzFw
        T2NlQ2JSWnBublpGNlhIeFkiLAogICAidGl0bGUiOiAiQ1MgMTQ4IEZpbmFs
        IFJldmlldyIsCiAgICJtaW1lVHlwZSI6ICJhcHBsaWNhdGlvbi92bmQuZ29v
        Z2xlLWFwcHMuZG9jdW1lbnQiCiAgfSwKICB7CiAgICJpZCI6ICIxa3Fwa2s4
        M0RHYS11RHgwUFJlVFNONjVoNEFUTTVqQ0QtSUo2M0xnbUVzTSIsCiAgICJ0
        aXRsZSI6ICJVbnRpdGxlZCBkb2N1bWVudCIsCiAgICJtaW1lVHlwZSI6ICJh
        cHBsaWNhdGlvbi92bmQuZ29vZ2xlLWFwcHMuZG9jdW1lbnQiCiAgfSwKICB7
        CiAgICJpZCI6ICIwQW4wQ0draHJONXF6ZEdob1NWZDBOa2hKVjJkNFVEVTBi
        V1ZUYTI1RU5rRSIsCiAgICJ0aXRsZSI6ICJDUyAxNDggQXNzaWduIDcgR3Jh
        cGhzIiwKICAgIm1pbWVUeXBlIjogImFwcGxpY2F0aW9uL3ZuZC5nb29nbGUt
        YXBwcy5zcHJlYWRzaGVldCIKICB9LAogIHsKICAgImlkIjogIjFuQTRkOXRa
        Vm5DTnFQMmEzc1N0cEJNNzd3ZnlEOVJUNldpM01Yc0owWWgwIiwKICAgInRp
        dGxlIjogIkNTIDE0NCBNaWR0ZXJtIFJldmlldyIsCiAgICJtaW1lVHlwZSI6
        ICJhcHBsaWNhdGlvbi92bmQuZ29vZ2xlLWFwcHMuZG9jdW1lbnQiCiAgfSwK
        ICB7CiAgICJpZCI6ICIxNm9QUUxwZWNWZDZNRnFnX1ZCTEN6blBhbld0OVp4
        N2V5NnZfbEVVVzZCSSIsCiAgICJ0aXRsZSI6ICJDUyAxNDggTWlkdGVybSBS
        ZXZpZXciLAogICAibWltZVR5cGUiOiAiYXBwbGljYXRpb24vdm5kLmdvb2ds
        ZS1hcHBzLmRvY3VtZW50IgogIH0sCiAgewogICAiaWQiOiAiMXlvbWpsZnMx
        NElyeHl1b0J6VHRyX0FTRll2b04yRW5qT2Vubzc1N053ckEiLAogICAidGl0
        bGUiOiAiQ1MgMTQ4IE1pZHRlcm0gTm90ZXMiLAogICAibWltZVR5cGUiOiAi
        YXBwbGljYXRpb24vdm5kLmdvb2dsZS1hcHBzLmRvY3VtZW50IgogIH0sCiAg
        ewogICAiaWQiOiAiMU9kOVM3ZjZYQVdDU2Q5WVJpMXdpcHl0QThPQ0FyemZ2
        YTNDOVFxZUM1b3ciLAogICAidGl0bGUiOiAiQ1MgMTEwIE1pZHRlcm0gUmV2
        aWV3IiwKICAgIm1pbWVUeXBlIjogImFwcGxpY2F0aW9uL3ZuZC5nb29nbGUt
        YXBwcy5kb2N1bWVudCIKICB9LAogIHsKICAgImlkIjogIjBCMzBDR2tock41
        cXpaMlEwUWw5aGVuUkdVRGciLAogICAidGl0bGUiOiAib2x5bXBpY3MuY3N2
        IiwKICAgIm1pbWVUeXBlIjogInRleHQvY3N2IgogIH0sCiAgewogICAiaWQi
        OiAiMEFuMENHa2hyTjVxemREUkhUV3hXVERVemVsRnRVMVE0VDAxaGR6VjZV
        MUUiLAogICAidGl0bGUiOiAiVW50aXRsZWQgc3ByZWFkc2hlZXQiLAogICAi
        bWltZVR5cGUiOiAiYXBwbGljYXRpb24vdm5kLmdvb2dsZS1hcHBzLnNwcmVh
        ZHNoZWV0IgogIH0sCiAgewogICAiaWQiOiAiMEIzMENHa2hyTjVxelJqSmpR
        aTFPVEVOWlMyOCIsCiAgICJ0aXRsZSI6ICJDb21wdXRlciBOZXR3b3JraW5n
        LnBkZiIsCiAgICJtaW1lVHlwZSI6ICJhcHBsaWNhdGlvbi9wZGYiCiAgfSwK
        ICB7CiAgICJpZCI6ICIxSlFTWnV3TzBHUzJ4UEV3SkFsZC05TGw4N2o4S3dp
        Z1dCT3hReHo1bUI5byIsCiAgICJ0aXRsZSI6ICJOaWNpcmEgSW50ZXJuc2hp
        cCBQcmVzZW50YXRpb24iLAogICAibWltZVR5cGUiOiAiYXBwbGljYXRpb24v
        dm5kLmdvb2dsZS1hcHBzLnByZXNlbnRhdGlvbiIKICB9LAogIHsKICAgImlk
        IjogIjFiamItUUFONFI5SW15VVR0amtHTUl5bE5SX1loTks0ZE1nLWdVTUdW
        V0xrIiwKICAgInRpdGxlIjogIlhlbml0aCBtZXNzYWdlIElEcyIsCiAgICJt
        aW1lVHlwZSI6ICJhcHBsaWNhdGlvbi92bmQuZ29vZ2xlLWFwcHMuZG9jdW1l
        bnQiCiAgfSwKICB7CiAgICJpZCI6ICIxNktxUnpCc0xpTVJkSXloNG9JMUFQ
        N1hVMkVaRUZkWm8yWmdxWmxpZGlnMCIsCiAgICJ0aXRsZSI6ICJCT1NQIEJl
        cmxpbiIsCiAgICJtaW1lVHlwZSI6ICJhcHBsaWNhdGlvbi92bmQuZ29vZ2xl
        LWFwcHMuZG9jdW1lbnQiCiAgfSwKICB7CiAgICJpZCI6ICIxTXl0bzExczhD
        QnBUQlk5b3hDRG9OVV9wSjR5bGhGbEVoTnNCelF0emQ1WSIsCiAgICJ0aXRs
        ZSI6ICJTaWduYXR1cmVzIiwKICAgIm1pbWVUeXBlIjogImFwcGxpY2F0aW9u
        L3ZuZC5nb29nbGUtYXBwcy5kb2N1bWVudCIKICB9LAogIHsKICAgImlkIjog
        IjF6SGZ4c24xVnRvajF4NWxVbVVkZDRkajFtRlB5Mmw5U0c2Z2Q2TUUySkt3
        IiwKICAgInRpdGxlIjogIlBoaSBQc2kiLAogICAibWltZVR5cGUiOiAiYXBw
        bGljYXRpb24vdm5kLmdvb2dsZS1hcHBzLmRvY3VtZW50IgogIH0sCiAgewog
        ICAiaWQiOiAiMWZIWEttbzFMcEl0SlN5ZWliaXVfQ3pMMVYycW01cjlUdTQ1
        c29YYlFyaU0iLAogICAidGl0bGUiOiAiVW50aXRsZWQgZG9jdW1lbnQiLAog
        ICAibWltZVR5cGUiOiAiYXBwbGljYXRpb24vdm5kLmdvb2dsZS1hcHBzLmRv
        Y3VtZW50IgogIH0sCiAgewogICAiaWQiOiAiMVNLT2VFT0NYU0g4Um5fRm40
        UW4tLWNJYlkxMi1jZEw2Qi1CdmFtSGhVZmsiLAogICAidGl0bGUiOiAiSW1w
        b3J0ZWQgZnJvbSBHb29nbGUgTm90ZWJvb2sgLSDjg57jgqQg44OO44O844OI
        44OW44OD44KvIiwKICAgIm1pbWVUeXBlIjogImFwcGxpY2F0aW9uL3ZuZC5n
        b29nbGUtYXBwcy5kb2N1bWVudCIKICB9LAogIHsKICAgImlkIjogIjFwNGJD
        Qnl3WlBuYnpfNjhZWEFRbnpCTng3RW54V0xuWFdwSGcwaGVmMTR3IiwKICAg
        InRpdGxlIjogIlF1YWxpZnlpbmdRbnMtVVMyMDEyLmRvYyIsCiAgICJtaW1l
        VHlwZSI6ICJhcHBsaWNhdGlvbi92bmQuZ29vZ2xlLWFwcHMuZG9jdW1lbnQi
        CiAgfSwKICB7CiAgICJpZCI6ICIxcFF2Yy1iaTNlcVlCdjY5ZUVFRDNscmZ3
        MGZkQW5idlhXMF9JVzhKMjRSayIsCiAgICJ0aXRsZSI6ICJRdWFsaWZ5aW5n
        UW5zLVVTMjAxMi5kb2MiLAogICAibWltZVR5cGUiOiAiYXBwbGljYXRpb24v
        dm5kLmdvb2dsZS1hcHBzLmRvY3VtZW50IgogIH0sCiAgewogICAiaWQiOiAi
        MXVmenlxcm56Yzh1bG5aQlBuSm1uYURfdm9uQTh3dnIxMThpSkFHamJQb2d0
        YWVWOUxKbjRndjFCaEMzMyIsCiAgICJ0aXRsZSI6ICJRdWFsaWZ5aW5nUW5z
        LVVTMjAxMi5kb2MiLAogICAibWltZVR5cGUiOiAiYXBwbGljYXRpb24vbXN3
        b3JkIgogIH0sCiAgewogICAiaWQiOiAiMTZhWFc1NTVnRUlYQzVneFpKU3FI
        cW1uNy1uakpxSkh1aGRGU2lJYVZ0elkiLAogICAidGl0bGUiOiAiUFNDIDIw
        MTEiLAogICAibWltZVR5cGUiOiAiYXBwbGljYXRpb24vdm5kLmdvb2dsZS1h
        cHBzLmRvY3VtZW50IgogIH0sCiAgewogICAiaWQiOiAiMVZtcHd6eVpJOWdM
        U2NLMGhOX281LWJZRDhEX1Zkb2Q1Wkp2QTlCRDd5SzQiLAogICAidGl0bGUi
        OiAiSURBIEludGVydmlldyIsCiAgICJtaW1lVHlwZSI6ICJhcHBsaWNhdGlv
        bi92bmQuZ29vZ2xlLWFwcHMuZG9jdW1lbnQiCiAgfSwKICB7CiAgICJpZCI6
        ICIxVTJxdEdWVW81am95bXU2MDRHZW5BbHZPOW90LWYyeWdJWC1hYVdVbW9k
        ayIsCiAgICJ0aXRsZSI6ICJJbXBvcnRlZCBmcm9tIGNhbWVyYSAyMDExMDQy
        OC0xMTIyIiwKICAgIm1pbWVUeXBlIjogImFwcGxpY2F0aW9uL3ZuZC5nb29n
        bGUtYXBwcy5kb2N1bWVudCIKICB9LAogIHsKICAgImlkIjogIjBBbjBDR2to
        ck41cXpkR1p2TnpCQ1FWaFlZME5WT1RsTWNtbGlPVE5xTVdjIiwKICAgInRp
        dGxlIjogIkphcGFuIDIwMTEgRXhwZW5kaXR1cmUiLAogICAibWltZVR5cGUi
        OiAiYXBwbGljYXRpb24vdm5kLmdvb2dsZS1hcHBzLnNwcmVhZHNoZWV0Igog
        IH0sCiAgewogICAiaWQiOiAiMW9tYzJ2ajBZUVl5N2tCaGl0ZlJuUHA3TVJN
        UGtyZTBfZml3dzB3TUNZZUEiLAogICAidGl0bGUiOiAiVW50aXRsZWQgZG9j
        dW1lbnQiLAogICAibWltZVR5cGUiOiAiYXBwbGljYXRpb24vdm5kLmdvb2ds
        ZS1hcHBzLmRvY3VtZW50IgogIH0sCiAgewogICAiaWQiOiAiMWpkbFNVTjhN
        RnlFdHpubVNiZHBZZ0ZvTUtxcjRuLU9hTllqcjBQeDYwRnciLAogICAidGl0
        bGUiOiAiMjE3MTAxLi5wcm9wb3NhbCBmb3JtYXQucGRmIiwKICAgIm1pbWVU
        eXBlIjogImFwcGxpY2F0aW9uL3ZuZC5nb29nbGUtYXBwcy5kb2N1bWVudCIK
        ICB9LAogIHsKICAgImlkIjogIjE2SlJ1cXQ5aTdkTWtJVFFfRkx3NGtPc29V
        QUdsVGtvWDI2b3NmcWZWNllFIiwKICAgInRpdGxlIjogIuWHuuePvuadoeS7
        tiIsCiAgICJtaW1lVHlwZSI6ICJhcHBsaWNhdGlvbi92bmQuZ29vZ2xlLWFw
        cHMuZG9jdW1lbnQiCiAgfSwKICB7CiAgICJpZCI6ICIxY3hMY09Ddjgxb0kw
        STBTLUQ1NFAxb3Z6cjBGYnBLZVhDQWRVekxnUDdVZyIsCiAgICJ0aXRsZSI6
        ICJVbnRpdGxlZCIsCiAgICJtaW1lVHlwZSI6ICJhcHBsaWNhdGlvbi92bmQu
        Z29vZ2xlLWFwcHMuZG9jdW1lbnQiCiAgfSwKICB7CiAgICJpZCI6ICIxb3Et
        RXdGRXFkSlJCU0tuN1doQW9NdW9ib2xiMUFmVjJCZUFHYjFZOTN6QSIsCiAg
        ICJ0aXRsZSI6ICJMaWZlIEdvYWxzIiwKICAgIm1pbWVUeXBlIjogImFwcGxp
        Y2F0aW9uL3ZuZC5nb29nbGUtYXBwcy5kb2N1bWVudCIKICB9LAogIHsKICAg
        ImlkIjogIjFVVmsxRXpwWTJ2T0YtVW8zcDY1UkxnLXJfUW5uLVpMdFBONk9V
        YlNqd3BrIiwKICAgInRpdGxlIjogIkZlbWFsZSBOYW1lcyIsCiAgICJtaW1l
        VHlwZSI6ICJhcHBsaWNhdGlvbi92bmQuZ29vZ2xlLWFwcHMuZG9jdW1lbnQi
        CiAgfSwKICB7CiAgICJpZCI6ICIxODRRTzVzYkdrTkpKdV9wZENQenZyOV9B
        RFc3RnF1VzA5ZllJWTVITEc5byIsCiAgICJ0aXRsZSI6ICJVbnRpdGxlZCIs
        CiAgICJtaW1lVHlwZSI6ICJhcHBsaWNhdGlvbi92bmQuZ29vZ2xlLWFwcHMu
        ZG9jdW1lbnQiCiAgfSwKICB7CiAgICJpZCI6ICIwQW4wQ0draHJONXF6Y0VO
        VmQwazNWVk5GU2xKZk5uTlFNV3BCYVhkSlNWRSIsCiAgICJ0aXRsZSI6ICJK
        YXBhbiAyMDA4IiwKICAgIm1pbWVUeXBlIjogImFwcGxpY2F0aW9uL3ZuZC5n
        b29nbGUtYXBwcy5zcHJlYWRzaGVldCIKICB9LAogIHsKICAgImlkIjogIjFP
        NXYyU2lSRC1pTURXM3VVQ0JBUUVFQzNSMzY1OUhEWFV4b1dUTUFULWlZIiwK
        ICAgInRpdGxlIjogIlVudGl0bGVkIiwKICAgIm1pbWVUeXBlIjogImFwcGxp
        Y2F0aW9uL3ZuZC5nb29nbGUtYXBwcy5kb2N1bWVudCIKICB9LAogIHsKICAg
        ImlkIjogIjBBbjBDR2tock41cXpjRU5WZDBrM1ZWTkZTbEpmVEdZdGIwMWFk
        MkpNUkhjIiwKICAgInRpdGxlIjogImV4cGVuZGl0dXJlIiwKICAgIm1pbWVU
        eXBlIjogImFwcGxpY2F0aW9uL3ZuZC5nb29nbGUtYXBwcy5zcHJlYWRzaGVl
        dCIKICB9LAogIHsKICAgImlkIjogIjFxbWY1LU9WMGFxdl9yNWFRaVQ0ZnB1
        V0g1ckwwWFpYa3NINi0xS1g1dG53IiwKICAgInRpdGxlIjogIkthbmppIiwK
        ICAgIm1pbWVUeXBlIjogImFwcGxpY2F0aW9uL3ZuZC5nb29nbGUtYXBwcy5k
        b2N1bWVudCIKICB9LAogIHsKICAgImlkIjogIjF0MlRpUndfcnYyMTBIdExf
        cFg2M3Bnb2J2U3pqX1o3Q1VjVy1WamtHS2NvIiwKICAgInRpdGxlIjogIkNv
        bW1vbiBBcHBsaWNhdGlvbiBFc3NheSIsCiAgICJtaW1lVHlwZSI6ICJhcHBs
        aWNhdGlvbi92bmQuZ29vZ2xlLWFwcHMuZG9jdW1lbnQiCiAgfSwKICB7CiAg
        ICJpZCI6ICIxQTBJVUFLX25SLWhxR2NfXzNVTjRFb2xSSzdiR1hBTTlUVTJn
        d1VSR1hpMCIsCiAgICJ0aXRsZSI6ICJDYXJuZWdpZSBNZWxsb24gRXNzYXki
        LAogICAibWltZVR5cGUiOiAiYXBwbGljYXRpb24vdm5kLmdvb2dsZS1hcHBz
        LmRvY3VtZW50IgogIH0sCiAgewogICAiaWQiOiAiMTlGSldCd2RFdVZmYTlL
        OUNFT3hKb0JGUzFaTDVSU1hKRVhQSUJQYkYwd2ciLAogICAidGl0bGUiOiAi
        UXVhbnR1bSBQaHlzaWNzIiwKICAgIm1pbWVUeXBlIjogImFwcGxpY2F0aW9u
        L3ZuZC5nb29nbGUtYXBwcy5kb2N1bWVudCIKICB9LAogIHsKICAgImlkIjog
        IjFCeFhVUGNDSmd2U1U0bGtmTVBLX0NfdVlZaGF4dm8ySTk3Q3ZYWXJBbnBr
        IiwKICAgInRpdGxlIjogIlNlbWljb25kdWN0b3JzIiwKICAgIm1pbWVUeXBl
        IjogImFwcGxpY2F0aW9uL3ZuZC5nb29nbGUtYXBwcy5kb2N1bWVudCIKICB9
        LAogIHsKICAgImlkIjogIjFLYWV4aWd1Q2d2QTk0WXBiZDRRcjNuMWtlWmdV
        eXlWeDE2ZVFsZzhBeXVnIiwKICAgInRpdGxlIjogIkJpb3BoeXNpY3MiLAog
        ICAibWltZVR5cGUiOiAiYXBwbGljYXRpb24vdm5kLmdvb2dsZS1hcHBzLmRv
        Y3VtZW50IgogIH0sCiAgewogICAiaWQiOiAiMTV3cmpGUmZaaXhkLXpTSGFz
        dXpOQlQxUUFFLWd0eUw5MWdoUWVUOTRvcjAiLAogICAidGl0bGUiOiAiVVMg
        QXBwbGljYXRpb24gRXNzYXkiLAogICAibWltZVR5cGUiOiAiYXBwbGljYXRp
        b24vdm5kLmdvb2dsZS1hcHBzLmRvY3VtZW50IgogIH0sCiAgewogICAiaWQi
        OiAiMVR5Tm54aURVQ1diZmNLMER1cFphTlZpQ3IzN0RzUXlNcUhnMVRWYWxP
        SDQiLAogICAidGl0bGUiOiAiUmFuZG9tIEVzc2F5IEV4cHJlc3Npb25zIiwK
        ICAgIm1pbWVUeXBlIjogImFwcGxpY2F0aW9uL3ZuZC5nb29nbGUtYXBwcy5k
        b2N1bWVudCIKICB9LAogIHsKICAgImlkIjogIjE0UV92WXlZYUxKUUpiak9s
        ZFVfZjA1OVduOWR4VHd2dW9FMmM3dEJlVUJrIiwKICAgInRpdGxlIjogIlNw
        aW50cm9uaWNzIiwKICAgIm1pbWVUeXBlIjogImFwcGxpY2F0aW9uL3ZuZC5n
        b29nbGUtYXBwcy5kb2N1bWVudCIKICB9LAogIHsKICAgImlkIjogIjFONWNP
        NVBxb0VrZEtqZzYyeF9yZnE2RnVDZXN3MlhFQkw5enZScTA3cE1zIiwKICAg
        InRpdGxlIjogIkRpYWdyYW1zIiwKICAgIm1pbWVUeXBlIjogImFwcGxpY2F0
        aW9uL3ZuZC5nb29nbGUtYXBwcy5kb2N1bWVudCIKICB9LAogIHsKICAgImlk
        IjogIjBBbjBDR2tock41cXpjRU5WZDBrM1ZWTkZTbEk1WVhkT1JsaHhkbVpL
        UjFFIiwKICAgInRpdGxlIjogImFuaW1lIiwKICAgIm1pbWVUeXBlIjogImFw
        cGxpY2F0aW9uL3ZuZC5nb29nbGUtYXBwcy5zcHJlYWRzaGVldCIKICB9LAog
        IHsKICAgImlkIjogIjE2bzhrMFAxaUY3VW5UdWg0a29rcGdBaWdERFRsSldx
        S1BRLUc1TGlMYVpvIiwKICAgInRpdGxlIjogIuOBqOOCguOBoOOBoSIsCiAg
        ICJtaW1lVHlwZSI6ICJhcHBsaWNhdGlvbi92bmQuZ29vZ2xlLWFwcHMuZG9j
        dW1lbnQiCiAgfSwKICB7CiAgICJpZCI6ICIwQW4wQ0draHJONXF6Y0VOVmQw
        azNWVk5GU2xJdE1FbGpkRVJ2YkdkNVYyYyIsCiAgICJ0aXRsZSI6ICJwcmVv
        cmRlcnMiLAogICAibWltZVR5cGUiOiAiYXBwbGljYXRpb24vdm5kLmdvb2ds
        ZS1hcHBzLnNwcmVhZHNoZWV0IgogIH0KIF0KfQo=
    http_version: 
  recorded_at: Wed, 21 Aug 2013 02:53:15 GMT
- request:
    method: get
    uri: https://www.googleapis.com/drive/v2/files?fields=items(id,mimeType,title),nextPageToken&q='0B30CGkhrN5qzSFhxd3V0MVhyS28'%20in%20parents
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - Worochi/0.0.14 google-api-ruby-client/0.6.4 Linux/3.5.0-17-generic
      Authorization:
      - Bearer <GOOGLE_TOKEN>
      Cache-Control:
      - no-store
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - '*/*'
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Wed, 21 Aug 2013 02:53:17 GMT
      Date:
      - Wed, 21 Aug 2013 02:53:17 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"HK9znrxLd1pIgz63yXyznaLN5rM/ZwRBxHjx113koI3ox68057QzXoo"'
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |
        {
         "items": [
          {
           "id": "0B30CGkhrN5qzaUJGbFNDRjl0S2M",
           "title": "test",
           "mimeType": "application/vnd.google-apps.folder"
          },
          {
           "id": "1H5aldqCSrYmaC2oy2EAu0CVEJPVN90SbQDksLGG55lo",
           "title": "Copy of Presentation - Index card",
           "mimeType": "application/vnd.google-apps.presentation"
          }
         ]
        }
    http_version: 
  recorded_at: Wed, 21 Aug 2013 02:53:17 GMT
- request:
    method: get
    uri: https://www.googleapis.com/drive/v2/files?fields=items(id,mimeType,title),nextPageToken&q='0B30CGkhrN5qzaUJGbFNDRjl0S2M'%20in%20parents
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - Worochi/0.0.14 google-api-ruby-client/0.6.4 Linux/3.5.0-17-generic
      Authorization:
      - Bearer <GOOGLE_TOKEN>
      Cache-Control:
      - no-store
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - '*/*'
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Wed, 21 Aug 2013 02:53:18 GMT
      Date:
      - Wed, 21 Aug 2013 02:53:18 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"HK9znrxLd1pIgz63yXyznaLN5rM/_4un1xXaGRuaimutyYdzPQAi2rg"'
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |
        {
         "items": [
          {
           "id": "0B30CGkhrN5qzUFZMUl9rN1pzUEU",
           "title": "worochi_insertion_test",
           "mimeType": "application/vnd.google-apps.folder"
          },
          {
           "id": "0B30CGkhrN5qzUzRUTTQ0Zk9fZWs",
           "title": "file1",
           "mimeType": "application/octet-stream"
          },
          {
           "id": "0B30CGkhrN5qzRldfNlQzVW53dE0",
           "title": "LICENSE",
           "mimeType": "application/octet-stream"
          },
          {
           "id": "0B30CGkhrN5qzTzFWODQ2UFdEM1E",
           "title": "README.md",
           "mimeType": "application/octet-stream"
          },
          {
           "id": "0B30CGkhrN5qzWGNDQUxlQkRhNDA",
           "title": ".git",
           "mimeType": "application/vnd.google-apps.folder"
          },
          {
           "id": "0B30CGkhrN5qzSWhiZW13bThVd1k",
           "title": "folder1",
           "mimeType": "application/vnd.google-apps.folder"
          },
          {
           "id": "0B30CGkhrN5qzR0s2cGQ4a1NRVVU",
           "title": "folder2",
           "mimeType": "application/vnd.google-apps.folder"
          },
          {
           "id": "0B30CGkhrN5qzVmFWVkY3S3ZDQWc",
           "title": "folder3",
           "mimeType": "application/vnd.google-apps.folder"
          }
         ]
        }
    http_version: 
  recorded_at: Wed, 21 Aug 2013 02:53:18 GMT
recorded_with: VCR 2.5.0
